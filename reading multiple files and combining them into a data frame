import pyfastx
import os
from multiprocessing import Process
import pandas as pd

def read_gz(file_name,limit=0):
    id, quality, seq = [], [], []

    fastq_file = pyfastx.Fastq(file_name, build_index=False)

    if limit >= 1:
        n = 0
        for name, sequence, qual in fastq_file:
            id.append(name)
            seq.append(sequence)
            quality.append(qual)
            n += 1
            if n == limit:
                break
    else:
        for name, sequence, qual in fastq_file:
            id.append(name)
            seq.append(sequence)
            quality.append(qual)

    try:  # file integrity check
        df = pd.DataFrame({'id': id, 'Sequence': seq, 'Quality': quality})
    except:
        print('File ' + file_name + ' has been damaged')
    return df

folder = r'New folder'
list_of_files = os.listdir(folder)
files = []
limit=10000

for file in list_of_files:
    if file.endswith(".gz") or file.endswith(".fastq"):
        file_name = folder + str('\\') + str(file)
        files.append(file_name)

if __name__ == '__main__':
    for file in files:
        proc = Process(target=read_gz, args=(file,limit))
        proc.start()
